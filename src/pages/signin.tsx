import { GetServerSideProps, GetServerSidePropsContext } from "next";
import { getProviders, signIn, signOut, useSession } from "next-auth/react";
import { AppProps } from "next/app";
import Head from "next/head";
import { Footer } from "~/components/Footer";
import Header from "~/components/Header";

interface Provider {
  id: string;
  name: string;
  type: string;
  signinUrl: string;
  callbackUrl: string;
}

type Providers = Record<string, Provider>;

export default function SignIn({ providers }: { providers: Providers }) {
  console.log(providers);
  return (
    <>
      <Head>
        <title>Benefitsphere</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="text-primary ">
        <div className="flex h-dvh items-center justify-center bg-gradient-to-b from-tertiary to-danger p-6 text-white">
          <div className="flex h-full w-1/2 justify-between">
            <div className="m-auto flex flex-col">
              <h1 className="text-left text-6xl font-bold">
                Welcome to Benefitsphere
              </h1>
              <p className="text-left text-2xl">Please sign in to continue</p>
            </div>
            <div className="m-auto flex h-1/4  w-4/5 flex-col items-center  rounded bg-white p-2">
              <h2 className="pb-4 text-center text-2xl text-primary">
                Welcome to Benefitsphere
              </h2>
              {Object.values(providers).map((provider) => {
                return (
                  <button
                    className="h-12 w-4/5 rounded-md bg-primary font-extrabold text-white hover:bg-tertiary"
                    key={provider.id}
                    onClick={() => signIn(provider.id)}
                  >
                    {" "}
                    Sign in with {provider.name}
                  </button>
                );
              })}
            </div>
          </div>
        </div>
        {/* <Footer /> */}
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (
  context: GetServerSidePropsContext,
) => {
  const providers = await getProviders();

  return {
    props: { providers },
  };
};
